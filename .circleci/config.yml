# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  win: circleci/windows@2.4.0

jobs:
  build:
    executor:
      name: win/default
      shell: powershell.exe

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-app
      - run:
          name: "Install project dependencies"
          command: dotnet.exe restore
      - save_cache:
          key: v1-app
          paths:
            - C:\Users\circleci\.nuget\packages
      - run:
          name: "Run Build step"
          command: dotnet.exe publish -c Release -r win-x64
      - run:
          name: "Run AppScan Static Analysis"
          command: |
            $baseURL = 'https://cloud.appscan.com/api/V2'
            #$env:ASoC_IRX_Config_file = "C:\Users\circleci\project\appscan-config.xml"
            $env:ASoC_appID = 'acd3ef50-6276-461d-8514-abc6e7113577'
            $env:ASoC_scanName = 'test name2'
            $env:ASoC_IRX_Config_file = "C:\Users\circleci\project\appscan-config.xml"
            $bearer_token =''
            $jsonBody = "
              {
              `"KeyId`": `"$env:ASoC_API_Key`",
              `"KeySecret`": `"$env:ASoC_API_Secret`"
              }
            "
            $params = @{
            Uri         = "$baseURL/Account/ApiKeyLogin"
            Method      = 'POST'
            Body        = $jsonBody
            Headers = @{
                'Content-Type' = 'application/json'
            }
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls -bor [Net.SecurityProtocolType]::Tls11 -bor [Net.SecurityProtocolType]::Tls12
            $Members = Invoke-RestMethod @params
            Write-Host $Members
            $bearer_token = $Members.token
            $params = @{
             Uri         = "$baseURL/Apps"
              Method      = 'Get'
              Headers = @{
                    'Content-Type' = 'application/json'
                    Authorization = "Bearer $bearer_token"
                }
            }
            $Members2 = Invoke-RestMethod @params
            $ProgressPreference = 'SilentlyContinue'
            Invoke-WebRequest -Uri "https://cloud.appscan.com/api/Local/StaticAnalyzer/ARSATool" -OutFile "saclientutil.zip"
            Expand-Archive -Path "saclientutil.zip" -DestinationPath "saclientutil"
            .\saclientutil\SAClientUtil.8.0.1431\bin\appscan.bat prepare -c $env:ASoC_IRX_Config_file -n output.irx
            $irx_file = [IO.File]::ReadAllBytes('output.irx')
            $params = @{
              Uri         = "$baseURL/FileUpload"
              Method      = 'Post'
              Headers = @{
                    'Content-Type' = 'multipart/form-data'
                    Authorization = "Bearer $bearer_token"
                }
               Form = @{
                'fileToUpload' = Get-Item -Path "output.irx"
             }
            }
            $upload = Invoke-RestMethod @params
            $upload_File_ID = $upload.FileId
            write-host "File ID: $upload_File_ID"

