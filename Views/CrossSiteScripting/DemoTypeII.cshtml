<style>
  #search {
    position: fixed;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);

    -webkit-transition: all 0.5s ease-in-out;
    -moz-transition: all 0.5s ease-in-out;
    -o-transition: all 0.5s ease-in-out;
    -ms-transition: all 0.5s ease-in-out;
    transition: all 0.5s ease-in-out;

    -webkit-transform: translate(0px, -100%) scale(0, 0);
    -moz-transform: translate(0px, -100%) scale(0, 0);
    -o-transform: translate(0px, -100%) scale(0, 0);
    -ms-transform: translate(0px, -100%) scale(0, 0);
    transform: translate(0px, -100%) scale(0, 0);

    opacity: 0;
  }

  #search.open {
    -webkit-transform: translate(0px, 0px) scale(1, 1);
    -moz-transform: translate(0px, 0px) scale(1, 1);
    -o-transform: translate(0px, 0px) scale(1, 1);
    -ms-transform: translate(0px, 0px) scale(1, 1);
    transform: translate(0px, 0px) scale(1, 1);
    opacity: 1;
  }

  #search input[type="search"] {
    position: absolute;
    top: 50%;
    width: 100%;
    color: rgb(255, 255, 255);
    background: rgba(0, 0, 0, 0);
    font-size: 60px;
    font-weight: 300;
    text-align: center;
    border: 0px;
    margin: 0px auto;
    margin-top: -51px;
    padding-left: 30px;
    padding-right: 30px;
    outline: none;
  }

  #search .btn {
    position: absolute;
    top: 50%;
    left: 50%;
    margin-top: 61px;
    margin-left: -45px;
  }

  #search .close {
    position: fixed;
    top: 55px;
    right: 15px;
    color: #fff;
    background-color: #428bca;
    border-color: #357ebd;
    opacity: 1;
    padding: 10px 17px;
    font-size: 27px;
  }
</style>
@{ ViewData["Title"] = "Reflected XSS (AKA Non-Persistent or Type II)"; }
<div class="row">
  <h1 class="text-center">Malicious parameter is reflected back to the user</h1>
</div>

<div class="row">
  <h2>Example</h2>
</div>
<br />
<div class="row">
  <ul>
    <li>Click search to open search form</li>
    <li>Enter
      <mark>&lt;script&gt;alert('Test');&lt;/script&gt;</mark> or any other valid Javascript code wrapped inside script tag and
      click search</li>
  </ul>
</div>

<div class="row">
  <a class="btn btn-primary " href="#search">Search</a>
</div>
<br />

<div class="row">
  @if(ViewData["query"] != null) {
  <div class="well text-center">@Html.Raw((string)ViewData["query"])</div>
  } else {
  <div class="well text-center">
    <span>Search Results</span>
  </div>
  }
</div>

<br />
<div class="row">
  <h2>Vulnerable Code</h2>
</div>

<br />
<div class="row">
  <p> Entered Javascript code is sent to the server in GET parameter named
    <i>query.</i>
  </p>
      <pre>
    <code class="C#">
        [HttpGet]
        public IActionResult DemoTypeII(string query)
        {
            ViewData["query"] = query;
            
            // Disable Chrome browser XSS protection 
            HttpContext.Response.Headers.Add("X-XSS-Protection","0");
            return View();
        }
    </code>
  </pre>
</div>

<div class="row">
  <p>Server responses with search result and renders <i>query</i> parameter.</p>
  <pre>
    <code class="html">
        &lt;div class="row"&gt;
          @@if(ViewData["query"] != null) {
          &lt;div class="well text-center"&gt;@@Html.Raw((string)ViewData["query"])&lt;/div&gt;
          } else {
          &lt;div class="well text-center"&gt;
            &lt;span&gt;Search Results&lt;/span&gt;
          &lt;/div&gt;
          }
        &lt;/div&gt;      
    </code>
  </pre>

</div>

<!-- Search form -->
<div id="search">
  <button type="button" class="close">Ã—</button>
  <form asp-controller="CrossSiteScripting" asp-action="DemoTypeII" method="get">
    <input name="query" type="search" value="" placeholder="type keyword(s) here" />
    <button type="submit" class="btn btn-primary">Search</button>
  </form>
</div>

@section Scripts {
<script>
  $('a[href="#search"]').on('click', function (event) {
    event.preventDefault();
    $('#search').addClass('open');
    $('#search > form > input[type="search"]').focus();
  });

  $('#search, #search button.close').on('click keyup', function (event) {
    if (event.target == this || event.target.className == 'close' || event.keyCode == 27) {
      $(this).removeClass('open');
    }
  });

  hljs.initHighlightingOnLoad();
</script>
}